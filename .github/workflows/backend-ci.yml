name: Backend CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-healthcheck:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install backend dependencies
        working-directory: backend
        run: npm ci

      - name: Build backend
        working-directory: backend
        run: npm run build

      - name: Start MongoDB
        run: docker run -d --name mongo -p 27017:27017 mongo:6

      - name: Start backend
        working-directory: backend
        env:
          PORT: 5000
          JWT_SECRET: ci-secret
          CORS_ORIGINS: http://localhost:5173,http://localhost:3000
          APP_VERSION: ci
          MONGO_URI: mongodb://localhost:27017/stadipass_ci
        run: |
          nohup node dist/server.js > server.log 2>&1 &
          echo $! > backend.pid

      - name: Wait for health endpoint
        run: |
          for i in {1..20}; do
            if curl -sf http://localhost:5000/health > /dev/null; then
              echo "Backend is healthy"; exit 0; fi; sleep 1; done; exit 1

      - name: Smoke test auth (signup, login, me, refresh, logout)
        working-directory: backend
        run: |
          set -euo pipefail
          # Signup
          curl -s -o /dev/null -w "%{http_code}\n" -H 'Content-Type: application/json' \
            -d '{"email":"ciuser@example.com","password":"secret12","firstName":"CI","lastName":"User"}' \
            http://localhost:5000/api/auth/signup | grep -qE '201|409'
          # Login and store cookies
          curl -i -s -c cookies.txt -H 'Content-Type: application/json' \
            -d '{"email":"ciuser@example.com","password":"secret12"}' \
            http://localhost:5000/api/auth/login | tee login.out >/dev/null
          TOKEN=$(grep -oE '\{"token":"[^"]+"\}' login.out | sed -e 's/^.*\{"token":"//' -e 's/"\}$//')
          test -n "$TOKEN"
          # Me
          curl -s -H "Authorization: Bearer $TOKEN" http://localhost:5000/api/auth/me | grep -q 'email'
          # Refresh
          curl -s -i -b cookies.txt -X POST http://localhost:5000/api/auth/refresh | grep -q 'token'
          # Logout
          curl -s -i -b cookies.txt -X POST http://localhost:5000/api/auth/logout | grep -q '204'

      - name: Show server logs on failure
        if: failure()
        working-directory: backend
        run: |
          echo "==== server.log ====" && cat server.log || true

      - name: Stop backend
        if: always()
        run: |
          if [ -f backend/backend.pid ]; then kill $(cat backend/backend.pid) || true; fi
          docker rm -f mongo || true
